<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewScaleSpeed = 0.05;
viewMoveSpeed = 0.05;
buffer = 250;
maxBuffer = 400;
minWidth = 500;
minHeight = 500;
height = room_height;
width = room_width;
view_visible[view_current] = true;
view_wport[view_current] = 500;
view_hport[view_current] = 500;
view_vspeed[view_current] = -1;
view_hspeed[view_current] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xTot = 0;
yTot = 0;
xMin = 0;
xMax = 0;
yMin = 0;
yMax = 0;
itemSum = 0;
for (i = 0; i &lt; instance_number(obj_piece); i++)
{
    player = instance_find(obj_piece, i);
    if (player.isCore &amp;&amp; player.player)
    {
        itemSum += 1;
        if (itemSum == 1)
        {
            xMin = player.x;
            yMin = player.y;
            yMax = yMin;
            xMax = xMin;
        }
        else
        {
            if (player.x &lt; xMin)
                xMin = player.x;
            else if (player.x &gt; xMax)
                xMax = player.x;
            if (player.y &lt; yMin)
                yMin = player.y;
            else if (player.y &gt; yMax)
                yMax = player.y;
        }
        xTot += player.x;
        yTot += player.y;
    }
}

if itemSum != 0
{
    xAvg = xTot/itemSum;
    yAvg = yTot/itemSum;
}
mouseMaxX = view_wview[0]/3;
mouseMaxY = view_hview[0]/3;
mouseOffX = mouse_x - x;
mouseOffX = clamp(mouseOffX, -mouseMaxX, mouseMaxX)
mouseOffY = mouse_y - y;
mouseOffY = clamp(mouseOffY, -mouseMaxY, mouseMaxY);
if (global.mobile &amp;&amp; (!device_mouse_check_button(0, mb_left) || vstick_check(0) || vstick_check(1)))
{
    mouseOffX = 0;
    mouseOffY = 0;
}
x =  lerp(x, xAvg + mouseOffX, viewMoveSpeed);
y = lerp(y, yAvg + mouseOffY, viewMoveSpeed);
width = (xMax - xMin) + buffer;
height = (yMax - yMin) + buffer;
//show_message_async(string(view_wview[view_current]) + "|" + string(clamp(lerp(view_wview[view_current], width, viewScaleSpeed), minWidth, room_width/2)));
//if (((width * 9) / 16) &gt; height)
{
    view_wview[view_current] = clamp(lerp(view_wview[view_current], width, viewScaleSpeed), minWidth, room_width/2);
    view_hview[view_current] = clamp(view_wview[view_current], minHeight, room_height/2);
    view_wview[7] = clamp(lerp(view_wview[7], width, viewScaleSpeed), minWidth, room_width/2);
    view_hview[7] = clamp(view_wview[7], minHeight, room_height/2);
}
/*else
{   view_wview[0] = clamp((16 * view_hview[0])/9, minWidth, room_width);
    view_hview[0] = clamp(lerp(view_hview[0], height, viewScaleSpeed), minHeight, room_height);
    
}*/
view_hborder[view_current] = view_wview[view_current]/2;
view_vborder[view_current] = view_hview[view_current]/2;
view_hborder[7] = view_wview[7]/2;
view_vborder[7] = view_hview[7]/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(64, 64, string(view_current) + "|" + string(width) + "|" + string(view_xview[view_current]) + "|" + string(view_wview[view_current]));
//draw_text(64, 96, string(view_current) + "|" + string(height) + "|" + string(view_yview[view_current]) + "|" + string(view_hview[view_current]));
//show_message(view_yview[0]);
//draw_rectangle(x - 5, y - 5, x + 5, y + 5, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
